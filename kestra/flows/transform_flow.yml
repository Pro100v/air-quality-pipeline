id: air_quality_transform
namespace: air_quality

inputs:
  - name: date
    type: STRING
    defaults: "{{ now() | date('yyyy-MM-dd') }}"

tasks:
  - id: run_dbt_models
    type: io.kestra.plugin.scripts.shell.Commands
    commands:
      - cd /app/dbt_models
      - dbt deps --profiles-dir=.
      - dbt run --profiles-dir=. --target prod
    env:
      GCP_PROJECT_ID: "{{ env('GCP_PROJECT_ID') }}"
      BIGQUERY_DATASET: "{{ env('BIGQUERY_DATASET', 'air_quality_dataset') }}"
      BIGQUERY_LOCATION: "{{ env('BIGQUERY_LOCATION', 'EU') }}"
      GOOGLE_APPLICATION_CREDENTIALS: "/app/secrets/credentials.json"

  - id: test_dbt_models
    type: io.kestra.plugin.scripts.shell.Commands
    commands:
      - cd /app/dbt_models
      - dbt test --profiles-dir=. --target prod
    env:
      GCP_PROJECT_ID: "{{ env('GCP_PROJECT_ID') }}"
      BIGQUERY_DATASET: "{{ env('BIGQUERY_DATASET', 'air_quality_dataset') }}"
      BIGQUERY_LOCATION: "{{ env('BIGQUERY_LOCATION', 'EU') }}"
      GOOGLE_APPLICATION_CREDENTIALS: "/app/secrets/credentials.json"
    dependsOn:
      - run_dbt_models

  - id: generate_dbt_docs
    type: io.kestra.plugin.scripts.shell.Commands
    commands:
      - cd /app/dbt_models
      - dbt docs generate --profiles-dir=. --target prod
    env:
      GCP_PROJECT_ID: "{{ env('GCP_PROJECT_ID') }}"
      BIGQUERY_DATASET: "{{ env('BIGQUERY_DATASET', 'air_quality_dataset') }}"
      BIGQUERY_LOCATION: "{{ env('BIGQUERY_LOCATION', 'EU') }}"
      GOOGLE_APPLICATION_CREDENTIALS: "/app/secrets/credentials.json"
    dependsOn:
      - test_dbt_models

  - id: notify_transform_complete
    type: io.kestra.plugin.notifications.slack.SlackIncoming
    url: "{{ env('KESTRA_WEBHOOK_URL') }}"
    message: "Air Quality Transformation process completed at {{ now() }}"
    dependsOn:
      - generate_dbt_docs

